" Little required stuff -------------------- {{{
set encoding=UTF-8 		    " set the encoding
set nocompatible		   	" be Improved, required
filetype off			    " required
filetype plugin on
" python3 imp module issue
silent! py3 pass
" }}}

" Plugs -------------------- {{{
"rtp means (r)un (t)ime (p)ath
set rtp+=~/.vim/bundle/Vundle.vim
call plug#begin('~/.vim/plugged')

" Addons
Plug 'scrooloose/nerdtree'
Plug 'yuttie/comfortable-motion.vim' " Smooth scrolling
Plug 'tpope/vim-surround' " Surroundings

" Themes
Plug 'altercation/vim-colors-solarized'
Plug 'icymind/NeoSolarized'
Plug 'morhetz/gruvbox' "The best...
Plug 'vim-python/python-syntax'
Plug 'junegunn/seoul256.vim'
Plug 'arcticicestudio/nord-vim'
Plug 'romainl/flattened'
Plug 'BarretRen/vim-colorscheme'
Plug 'Rigellute/rigel'

" Jedi-vim (not that useful actually)
"Plug 'davidhalter/jedi-vim'

" Searching (<C-P>)
Plug 'ctrlpvim/ctrlp.vim'

" Follow the standars boy !
Plug 'editorconfig/editorconfig-vim'

" Airline
Plug 'vim-airline/vim-airline'
Plug 'vim-airline/vim-airline-themes'

" Git Integration
Plug 'tpope/vim-fugitive'
Plug 'airblade/vim-gitgutter'

" Commenting lines
Plug 'vim-scripts/tComment'

" Arduino syntax
Plug 'sudar/vim-arduino-syntax'

" Note plugin
Plug 'xolox/vim-notes'
Plug 'xolox/vim-misc'

" Show code errors
Plug 'vim-syntastic/syntastic'

" Multiple cursors
Plug 'terryma/vim-multiple-cursors'

" Auto-closing
Plug 'cohama/lexima.vim'

" HTML
Plug 'mattn/emmet-vim'

" Documentation
Plug 'vim-utils/vim-man'
Plug 'gauteh/vim-cppman' " cpp
Plug 'vim-scripts/pydoc.vim'

" LaTeX Plug (exciting stuff)
Plug 'lervag/vimtex'

" Markdown style stuff
Plug 'shime/vim-livedown'

" Trailing Whitespaces
Plug 'ntpeters/vim-better-whitespace'

" Distraction-free writing
Plug 'junegunn/goyo.vim'

" Project Nova (colorscheme)
Plug 'sheerun/vim-polyglot'
Plug 'trevordmiller/nova-vim'

" Base2Tone color scheme
Plug 'atelierbram/Base2Tone-vim'

" Badwolf color scheme (finally I'm installing this)
Plug 'sjl/badwolf'

" Indent guides, pretty neat -\_(^_^)_/-
Plug 'thaerkh/vim-indentguides'

" Syntax
Plug 'MTDL9/vim-log-highlighting'

" Vim Sugar
Plug 'tpope/vim-eunuch'

" Vim Clap
Plug 'liuchengxu/vim-clap'

" Smooth scrolling
Plug 'terryma/vim-smooth-scroll'

" Power of VSCode... I guess
Plug 'neoclide/coc.nvim', {'branch': 'release'}

" Test Plug
"Plug 'file:///home/monepicor/Projects/VimScript/color-changer'

" Vim-devicons (Always should come last)
Plug 'ryanoasis/vim-devicons'
call plug#end()
filetype plugin indent on 	" required
" }}}

" Mappings -------------------- {{{
" Leader Mappings
map <Space> <leader>
map <leader>w   :w<CR>
map <leader>q   :q<CR>
map <leader>!   :qa<CR>
map <leader>gs  :Gstatus<CR>
map <leader>= 	 <C-W>=

" NERDTree Mappings
map <leader>nt   :NERDTreeToggle<CR>
map <leader>nf   :NERDTreeFocus<CR>
map <leader>nc   :NERDTreeCWD<CR>

" Edit .vimrc quickly in a split
map <leader>ev   :sp ~/.vimrc<CR>
" Source .vimrc
map <leader>sv   :source ~/.vimrc<CR>

" Clear Search Highlight
map <leader>csh  :nohlsearch<CR>
" Redraw the screen
map <leader>rd	 :redraw!<CR>

" Exit neovim terminal easily
tnoremap <Esc> <C-\><C-n>

" Easier split navigations
nnoremap <C-J> <C-W><C-J>
nnoremap <C-K> <C-W><C-K>
nnoremap <C-L> <C-W><C-L>
nnoremap <C-H> <C-W><C-H>

" Easy tab navigations
nnoremap <C-y>   :tabprevious<CR>
nnoremap <C-o>   :tabnext<CR>
" }}}

" Abbreviations -------------------- {{{
iabbrev asim not awesome
iabbrev environmnent environment
" }}}

" Settings [let and set] -------------------- {{{
let g:auto_save = 1 				" Enable auto save on Vim startup
let g:auto_save_in_insert_mode = 0	" Do not save in insert mode

" Reduce gitgutter updatetime
set updatetime=100

" Airline tab thing
let g:airline#extensions#tabline#enabled = 1

" Real colors
set termguicolors

syntax on

set autoread								" Auto reload changed files
set nowrap 									" Don't wrap the long lines
set expandtab shiftwidth=2 tabstop=2 				 	" Two spaces for tabs
set noswapfile								" Turn off swap files
set hlsearch								" Highlight the search results
set showcmd									" Show commands on status bar
set hidden									" Let buffers to be hidden without saving
set wildmode=longest:full
set ignorecase              " Ignore case when command completion
set wildignorecase

let g:tex_flavor = 'latex'

" Python interpreters
let g:python_host_prog  = '/usr/bin/python2.7'	  " Python 2
let g:python3_host_prog = '/usr/bin/python3.7'  " Python 3
" to disable
"let g:loaded_python_provider = 1
"let g:loaded_python3_provider = 1


" Latex neovim support
let g:vimtex_compiler_progname = 'nvr'

" }}}

" Persistent undo -------------------- {{{
set undodir=~/.vim/undo
set undofile
set undolevels=1000
set undoreload=10000
" }}}

" Interface -------------------- {{{
set number relativenumber 				" Enable line numbers
set scrolloff=10						" Leave 10 lines of buffer when scrolling
set sidescrolloff=10					" Leave 10 characters of horizontal buffer when scrolling
" }}}

" Look & Feel ;) -------------------- {{{
set background=dark
" badwolf is really good
colorscheme badwolf
" set termguicolors

" Airline theme
let g:airline_theme='base16_atelierdune'

"set guifont=DroidSansMono\ Nerd\ Font\ 11

" Showcase comments in italics
highlight Comment cterm=italic gui=italic

" Make the python code look pretty
let python_highlight_all=1

" }}}

" Vimscript file settings -------------------- {{{
augroup filetype_vim
	autocmd!
	autocmd FileType vim setlocal foldmethod=marker
	autocmd FileType asm set filetype=nasm
  autocmd BufRead,BufNewFile talimat setfiletype dosini
  autocmd BufRead,BufNewFile *.log setfiletype log
augroup END
" }}}

" Push yourself to learn -------------------- {{{
" Disable h,l and use w,e,b,g_,0,$,^ instead
nnoremap h <nop>
nnoremap l <nop>
" }}}

" Syntastic Settings -------------------- {{{
set statusline+=%#warningmsg#
set statusline+=%{SyntasticStatuslineFlag()}
set statusline+=%*

let g:syntastic_always_populate_loc_list = 0
let g:syntastic_auto_loc_list = 0
let g:syntastic_check_on_open = 0
let g:syntastic_check_on_wq = 0
let g:syntastic_python_pyflakes_exe = 'python3 -m pyflakes'
" }}}

" Little Ideas -------------------- {{{
" Make a command that changes colorcheme with arrow keys
" Dictionary Plug
" }}}

" Testing -------------------- {{{
"let g:jedi#auto_vim_configuration=0
"let g:jedi#popup_on_dot=1
"let g:jedi#popup_select_first=0
let g:gitgutter_enabled = 1
fun! ProfileStart(...)
	if a:0 && a:1 != 1
		let g:profile_file = a:1
	else
		let g:profile_file = '/tmp/vim'.getpid().'.'.reltimestr(reltime())[-4:].'profile.txt'
		if a:0 < 2 || a:2
			@* = g:profile_file
		endif
	endif
	echom "Profiling into" g:profile_file
	exec 'profile start '.g:profile_file
	profile! file **
	profile  func *
endfun
if len(get(g:, 'profile', ''))
	call ProfileStart(g:profile)
endif
if 0
	call ProfileStart(1, 0)
endif
" }}}

" Example Group -------------------- {{{
" You know what, use built-in command to
" \ make groups you dummy!
" }}}

