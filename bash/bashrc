# If not running interactively, don't do anything
[[ $- != *i* ]] && return

# Paths
#export PATH=~/kde/src/kdesrc-build:$PATH
export PATH=~/.local/bin:$PATH
export PATH=$PATH:~/.gem/ruby/2.6.0/bin


DIR="$HOME/.dotfiles"

# Color definitions
BGREEN=$'\[\033[1;32m\]'
GREEN=$'\[\033[0;32m\]'
BRED=$'\[\033[1;31m\]'
RED=$'\[\033[0;31m\]'
BBLUE=$'\[\033[1;34m\]'
BLUE=$'\[\033[0;34m\]'
NORMAL=$'\[\033[0m\]'

# Colored man pages
man() {
    env \
    LESS_TERMCAP_mb=$(printf "\e[1;31m") \
    LESS_TERMCAP_md=$(printf "\e[1;31m") \
    LESS_TERMCAP_me=$(printf "\e[0m") \
    LESS_TERMCAP_se=$(printf "\e[0m") \
    LESS_TERMCAP_so=$(printf "\e[1;44;33m") \
    LESS_TERMCAP_ue=$(printf "\e[0m") \
    LESS_TERMCAP_us=$(printf "\e[1;32m") \
    man "$@"
}

# Even more colors!
# alias ls="lsd"
alias ls='ls --color=auto --block-size=M'
alias dir='dir --color=auto'
alias vdir='vdir --color=auto'
alias grep='grep --color=auto'
alias fgrep='fgrep --color=auto'
alias egrep='egrep --color=auto'

# Bash completion
[[ -r /usr/share/bash-completion/bash_completion ]] && . /usr/share/bash-completion/bash_completion

# Git related things
GIT_PS1_SHOWDIRTYSTATE="true"
GIT_PS1_SHOWUPSTREAM="verbose"
. $DIR/bash/git-completion.bash
. $DIR/bash/git-prompt.sh

# Prompt
if [[ $(id -u) -ne 0 ]] ; then
	PROMPT_SIGN="$"
else
	PROMPT_SIGN="#"
fi

PROMPT_GIT='$(__git_ps1 " %s")'
PS1="[${BGREEN}\u@\h ${BBLUE}\W${NORMAL}${BRED}${PROMPT_GIT}${NORMAL}]${PROMPT_SIGN} "

# Include user specific stuff
[[ -r $DIR/bash/bashrc_user ]] && . $DIR/bash/bashrc_user

# HISTSIZE
export HISTSIZE=2000
export HISTFILESIZE=2000

# Unset temporary variables
unset PROMPT_SIGN
unset PROMPT_GIT
unset DIR

# set true colors for neovim
export NVIM_TUI_ENABLE_TRUE_COLOR=1

# set default editor as vim
VISUAL=nvim;
export VISUAL
EDITOR=nvim;
export EDITOR
TERMINAl=gnome-terminal;
export TERMINAL

# personal aliases
alias ttr='ranger ~/Lectures'

# use nvim
if hash nvim 2>/dev/null; then
	alias vim='nvim'
	alias vi='nvim'
else
	alias vi='vim'
fi

# markdown to html5
alias panmd='pandoc -t html5 -f markdown+smart --toc --toc-depth 3 --template GitHub.html5 --quiet'

#----------------------------------------------------------------------
# Push yourself to learn
#----------------------------------------------------------------------
alias clear="echo 'Use <C-L> instead.'"
alias exit="echo 'Use <C-D> instead.'"

export ARDUINO_DIR="/home/monepicor/Programs/arduino-1.8.8"
export ARDMK_DIR="/home/monepicor/.arduino_mk"
export AVR_TOOLS_DIR="$ARDUINO_DIR/hardware/tools/avr"

export LFS=/mnt/lfs

# Solve the emacs X problem on Elementary
alias emacs='XLIB_SKIP_ARGB_VISUALS=1 emacs'

# Take quick notes
alias note='nvim ~/.notes/stuff'

# define my main goal
export mymaingoal="Make that study program. It will changes things."

# Launch fish-shell
#fish

# Learning (as usual)
printf  '^B move cursor back
^F move cursor forward
^P previous command
^N next command
^A beginning of line
^E end of line
^K erase from beginning
^Y yank erased text

-------------------

man -k search
man section page' | catsay | lolcat


export LFS=/mnt/lfs
function mv2down {
  mv ~/Ä°ndirilenler/* ~/Downloads/
}

# Lua package.path variable
LUA_PATH="/usr/share/lua/5.3/?.lua;/usr/share/lua/5.3/?/init.lua;/usr/lib/lua/5.3/?.lua;/usr/lib/lua/5.3/?/init.lua;./?.lua;./?/init.lua;/usr/local/share/lua/5.3/?.lua;/usr/local/share/lua/5.3/?/init.lua"
export LUA_PATH

function gunc
{
    cp -R /home/milas/repos/mps /mnt/milis2/ortam2/usr/milis/mps
}

function fancy() {
  while true
  do
    figlet $1 | lolcat
    sleep 1
  done
}

function startos {
  qemu-system-x86_64 --enable-kvm -m 1024 -hdb $1 $2
}

function push {
  git add .
  git commit
  git push
}

function pushdot {
  git -C ~/.dotfiles add .
  git -C ~/.dotfiles commit
  git push
}

function youtube-pl {
  youtube-dl -o "%(playlist_index)s-%(title)s.%(ext)s" $1
}
