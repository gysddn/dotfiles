# If not running interactively, don't do anything
[[ $- != *i* ]] && return

# Turn on extended globbing
shopt -s extglob
# set -o vi

# Let other users to run graphical applications under
# this user's session
xhost + > /dev/null 2>&1

# Paths
#export PATH=~/kde/src/kdesrc-build:$PATH
export PATH=~/.local/bin:$PATH
export PATH=$PATH:~/.gem/ruby/2.6.0/bin
export PATH=$PATH:/usr/local/bin
export PATH=$PATH:/home/monepicor/.gem/ruby/2.6.0/bin
# export PATH=/home/monepicor/repos/autoconf/bin:$PATH
# export PATH=/home/monepicor/repos/automake/bin:$PATH
# export AUTOCONF=autoconf2.64
export JDK_HOME=/usr/lib/jvm/java-13-openjdk

DIR="$HOME/.dotfiles"

# Color definitions
BGREEN=$'\[\033[1;32m\]'
GREEN=$'\[\033[0;32m\]'
BRED=$'\[\033[1;31m\]'
RED=$'\[\033[0;31m\]'
BBLUE=$'\[\033[1;34m\]'
BLUE=$'\[\033[0;34m\]'
NORMAL=$'\[\033[0m\]'

# Colored man pages
man() {
    env \
    LESS_TERMCAP_mb="$(printf '\e[1;31m')" \
    LESS_TERMCAP_md="$(printf '\e[1;31m')" \
    LESS_TERMCAP_me="$(printf '\e[0m')" \
    LESS_TERMCAP_se="$(printf '\e[0m')" \
    LESS_TERMCAP_so="$(printf '\e[1;44;33m')" \
    LESS_TERMCAP_ue="$(printf '\e[0m')" \
    LESS_TERMCAP_us="$(printf '\e[1;32m')" \
    man "$@"
}

# Even more colors!
# alias ls="lsd"
alias ls='ls --color=auto --block-size=M'
alias dir='dir --color=auto'
alias vdir='vdir --color=auto'
alias grep='grep --color=auto'
alias fgrep='fgrep --color=auto'
alias egrep='egrep --color=auto'
alias mps='sudo mps'
# Bash completion
[[ -r /usr/share/bash-completion/bash_completion ]] && . /usr/share/bash-completion/bash_completion

# Git related things
GIT_PS1_SHOWDIRTYSTATE="true"
GIT_PS1_SHOWUPSTREAM="verbose"
. $DIR/bash/git-completion.bash
. $DIR/bash/git-prompt.sh

# Prompt
if [[ $(id -u) -ne 0 ]] ; then
	PROMPT_SIGN="$"
else
	PROMPT_SIGN="#"
fi

PROMPT_GIT='$(__git_ps1 " %s")'
PS1="[${BGREEN}\u@\h ${BBLUE}\W${NORMAL}${BRED}${PROMPT_GIT}${NORMAL}]${PROMPT_SIGN} "

# Include user specific stuff
[[ -r $DIR/bash/bashrc_user ]] && . $DIR/bash/bashrc_user

# HISTSIZE
export HISTSIZE=2000
export HISTFILESIZE=2000

# Unset temporary variables
unset PROMPT_SIGN
unset PROMPT_GIT
unset DIR

# set true colors for neovim
export NVIM_TUI_ENABLE_TRUE_COLOR=1

# set default editor as vim
VISUAL=nvim;
export VISUAL
EDITOR=nvim;
export EDITOR
TERMINAl=gnome-terminal;
export TERMINAL

# personal aliases
alias ttr='ranger ~/Lectures'

export VIM_CMD='nvim'
# use nvim
if hash nvim 2>/dev/null; then
	alias vim=$VIM_CMD
	alias vi=$VIM_CMD
else
	alias vi='vim -u /dev/null'
fi

# markdown to html5
alias panmd='pandoc -t html5 -f markdown+smart --toc --toc-depth 3 --template GitHub.html5 --quiet'

#----------------------------------------------------------------------
# Push yourself to learn
#----------------------------------------------------------------------
# alias clear="echo 'Use <C-L> instead.'"
alias exit="echo 'Use <C-D> instead.'"

export ARDUINO_DIR="/home/monepicor/Programs/arduino-1.8.8"
export ARDMK_DIR="/home/monepicor/.arduino_mk"
export AVR_TOOLS_DIR="$ARDUINO_DIR/hardware/tools/avr"

export LFS=/mnt/lfs

# Solve the emacs X problem on Elementary
alias emacs='XLIB_SKIP_ARGB_VISUALS=1 emacs'

# Take quick notes
alias note='nvim ~/.notes/stuff'

# define my main goal
export mymaingoal="Make that study program. It will change things."

# Lua package.path variable
#LUA_PATH="/usr/share/lua/5.3/?.lua;/usr/share/lua/5.3/?/init.lua;/usr/lib/lua/5.3/?.lua;/usr/lib/lua/5.3/?/init.lua;./?.lua;./?/init.lua;/usr/local/share/lua/5.3/?.lua;/usr/local/share/lua/5.3/?/init.lua"
#export LUA_PATH
export LUA_PATH='/usr/share/lua/5.3/?.lua;/usr/share/lua/5.3/?/init.lua;/usr/lib/lua/5.3/?.lua;/usr/lib/lua/5.3/?/init.lua;./?.lua;./?/init.lua;/usr/local/share/lua/5.3/?.lua;/usr/local/share/lua/5.3/?/init.lua;/home/monepicor/.luarocks/share/lua/5.3/?.lua;/home/monepicor/.luarocks/share/lua/5.3/?/init.lua'
export LUA_CPATH='/usr/lib/lua/5.3/?.so;/usr/lib/lua/5.3/loadall.so;./?.so;/home/monepicor/.luarocks/lib/lua/5.3/?.so'

export LUA_PATH_5_2='/usr/share/lua/5.2/?.lua;/usr/share/lua/5.2/?/init.lua;/usr/lib/lua/5.2/?.lua;/usr/lib/lua/5.2/?/init.lua;./?.lua;./?/init.lua;/usr/local/share/lua/5.2/?.lua;/usr/local/share/lua/5.2/?/init.lua;/home/monepicor/.luarocks/share/lua/5.2/?.lua;/home/monepicor/.luarocks/share/lua/5.2/?/init.lua'
export LUA_CPATH_5_2='/usr/lib/lua/5.2/?.so;/usr/lib/lua/5.2/loadall.so;./?.so;/home/monepicor/.luarocks/lib/lua/5.2/?.so'

export LFS=/mnt/lfs

# Launch fish-shell
# exec fish

# Learning (as usual)
printf  'J delete new line
U undo changes on the line
ZZ write and exit
:<C-D> show all possible commands
Use counts!' | catsay | lolcat

############### Functions 

function mv2down {
  mv ~/Ä°ndirilenler/* ~/Downloads/
}

function gunc
{
    cp -R /home/milas/repos/mps /mnt/milis2/ortam2/usr/milis/mps
}

function fancy() {
  while true
  do
    figlet "$1" | lolcat
    sleep 1
  done
}

function startos {
  # Start the os with ssh to 10022
  qemu-system-x86_64 \
  --enable-kvm \
  -m 2G \
  -hda "$1" \
  -net user,hostfwd=tcp::10022-:22 -net nic \
  "$2"
}

function push {
  git add .
  git commit
  git push
}

function pushdot {
  git -C ~/.dotfiles add .
  git -C ~/.dotfiles commit
  git push
}

function youtube-pl {
  youtube-dl -o "%(playlist_index)s-%(title)s.%(ext)s" "$1"
}
mnx='qemu-system-x86_64 -localtime -net user -net nic -m 256 -cdrom minix.iso -hda minix.img -boot d'


function usage() {
  if "$1" --help > /dev/null 2>&1; then
    "$1" --help | grep -- "$2"
  elif "$1" -h > /dev/null 2>&1; then
    "$1" -h | grep -- "$2"
  else
    echo "Not compatible."
  fi
}

play_lol() {
   WINEPREFIX=~/Games-Wine/LoL WINEARCH=win32 /opt/wine-lol/bin/wine /mnt/personal_files/Games/League\ of\ Legends/Riot\ Games/League\ of\ Legends/LeagueClient.exe
}

